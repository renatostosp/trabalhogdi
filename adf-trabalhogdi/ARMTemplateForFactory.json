{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nome do Data Factory",
			"defaultValue": "adf-trabalhogdi"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'accountKey' de 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storagetrabgdi.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Parte1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Fluxo de ingestão no ADF e\narmazenamento do arquivo movies no formato Parquet em um Data Lake Storage.",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "movies",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/movies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parte2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Fluxo de transformação, filtrando os filmes de comédia de 1990 em\ndiante. Disponibilizar somente as colunas: name, rating e gender.",
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "movies.csv",
						"fileSystem": "trabgdi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "rating",
						"type": "String"
					},
					{
						"name": "genre",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "released",
						"type": "String"
					},
					{
						"name": "score",
						"type": "String"
					},
					{
						"name": "votes",
						"type": "String"
					},
					{
						"name": "director",
						"type": "String"
					},
					{
						"name": "writer",
						"type": "String"
					},
					{
						"name": "star",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "budget",
						"type": "String"
					},
					{
						"name": "gross",
						"type": "String"
					},
					{
						"name": "company",
						"type": "String"
					},
					{
						"name": "runtime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "movies.csv",
						"fileSystem": "trabgdi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "rating",
						"type": "String"
					},
					{
						"name": "genre",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "released",
						"type": "String"
					},
					{
						"name": "score",
						"type": "String"
					},
					{
						"name": "votes",
						"type": "String"
					},
					{
						"name": "director",
						"type": "String"
					},
					{
						"name": "writer",
						"type": "String"
					},
					{
						"name": "star",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "budget",
						"type": "String"
					},
					{
						"name": "gross",
						"type": "String"
					},
					{
						"name": "company",
						"type": "String"
					},
					{
						"name": "runtime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/filtered_movies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "trabgdi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "rating",
						"type": "String"
					},
					{
						"name": "genre",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "released",
						"type": "String"
					},
					{
						"name": "score",
						"type": "String"
					},
					{
						"name": "votes",
						"type": "String"
					},
					{
						"name": "director",
						"type": "String"
					},
					{
						"name": "writer",
						"type": "String"
					},
					{
						"name": "star",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "budget",
						"type": "String"
					},
					{
						"name": "gross",
						"type": "String"
					},
					{
						"name": "company",
						"type": "String"
					},
					{
						"name": "runtime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/movies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "trabgdi"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/movies_filtered')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "producao",
						"fileSystem": "trabgdi"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "movies_filtered",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "filtered_movies",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "Filtrar1"
						}
					],
					"script": "source(output(\n\t\tname as string,\n\t\trating as string,\n\t\tgenre as string,\n\t\tyear as integer,\n\t\treleased as string,\n\t\tscore as double,\n\t\tvotes as double,\n\t\tdirector as string,\n\t\twriter as string,\n\t\tstar as string,\n\t\tcountry as string,\n\t\tbudget as double,\n\t\tgross as double,\n\t\tcompany as string,\n\t\truntime as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 filter(year>=1990) ~> Filtrar1\nFiltrar1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['movies_filtered'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tname,\n\t\trating,\n\t\tgenre\n\t),\n\tpartitionBy('hash', 1)) ~> sink1\nFiltrar1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tname as string,\n\t\trating as string,\n\t\tgenre as string,\n\t\tyear as string,\n\t\treleased as string,\n\t\tscore as string,\n\t\tvotes as string,\n\t\tdirector as string,\n\t\twriter as string,\n\t\tstar as string,\n\t\tcountry as string,\n\t\tbudget as string,\n\t\tgross as string,\n\t\tcompany as string,\n\t\truntime as string\n\t),\n\tpartitionFileNames:['movies_filtered'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/datasets/movies_filtered')]",
				"[concat(variables('factoryId'), '/datasets/filtered_movies')]"
			]
		}
	]
}